Capacity
`````````````````
s.size() -> returns the size of the string.

s.max_size() -> returns the maximum size that string can hold.

s.capacity() -> returns current available capacity of the string.

s.clear() -> clear the string.

s.empty() -> return true/false if the string is empty.

s.resize() -> change the size of the string.


Element access
``````````````````````````
S[i] -> access the ith index of the string.

s.at(i) -> access the ith index of the string.

s.back() -> access the last element of the string.

s.front() -> access the first element of the string.

Modifiers
````````````````
s+= -> append another string.

s.append() -> append another string.

s.push_back() -> add character to the last of the string.

s.pop_back() -> remove the last character of the string.

s= -> assign string.

s.assign() -> assign string.

s.erase() -> erase characters from the string.

s.replace() -> replace a portion of the string.

s.insert() -> insert a portion to a specific position.


5-6 String Iterators
`````````````````````````````````
- s.begin( ) -> Point index 0
- s.end( ) -> point end of string
- string iterator declaration
- print string chars using iterator
- use auto instead of declaring iterator

5-7 String Input with Spaces
````````````````````````````````````````````````
- getline( cin, s)  // string with space
- getchar() // take a unwanted char
- cin.ignore() // take a unwanted char
-stringstream ss(string) //create words from string ss group
- ss >> stringVer //iteareate string words
- print word from stringStream group using while loop






